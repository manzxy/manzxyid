import express from 'express';
import session from 'express-session';
import passport from 'passport';
import dotenv from 'dotenv';
import path from 'path';
import { dbConnect } from './lib/mongodb.js';
import authRoutes from './routes/auth.js';
import manhwaRoutes from './routes/manhwa.js';
import commentRoutes from './routes/comment.js';
dotenv.config();
await dbConnect();
const app = express();
app.use(express.json()); app.use(express.urlencoded({ extended:true }));
app.use(session({ secret: process.env.SESSION_SECRET || 'manzxy_secret', resave:false, saveUninitialized:false }));
app.use(passport.initialize()); app.use(passport.session());
app.use('/uploads', express.static(path.join(process.cwd(),'public','uploads')));
app.use(express.static(path.join(process.cwd(),'public')));
app.use('/auth', authRoutes); app.use('/api/manhwa', manhwaRoutes); app.use('/api', commentRoutes);
app.get('/', (req,res)=> res.redirect('/reader'));
app.get('/reader', (req,res)=> res.sendFile(path.join(process.cwd(),'public','reader.html')));
app.get('/reader/series/:id', (req,res)=> res.sendFile(path.join(process.cwd(),'public','chapter.html')));
app.get('/admin', (req,res)=> res.sendFile(path.join(process.cwd(),'public','admin.html')));
app.get('/profile', (req,res)=> res.sendFile(path.join(process.cwd(),'public','profile.html')));
app.get('/admin-users', (req,res)=> res.sendFile(path.join(process.cwd(),'public','admin-users.html')));
const PORT = process.env.PORT || 3000; app.listen(PORT, ()=> console.log(`Server running on http://localhost:${PORT}`));
